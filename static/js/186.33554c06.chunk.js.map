{"version":3,"file":"static/js/186.33554c06.chunk.js","mappings":"yNAqDA,UAhDgB,WAEX,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACD,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAqBR,OAlBJE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,sGAEZJ,GAAa,GAFD,UAGOK,EAAAA,EAAAA,IAAeJ,GAHtB,OAGNK,EAHM,OAINC,EAAaD,EAAKE,QACxBV,EAAWS,GALC,gDAQZE,QAAQC,IAAI,KAAMC,SAClBX,GAAa,GATD,yBAWZA,GAAa,GAXD,4EAAH,qDAcjBI,GACH,GAAE,CAACH,KAGI,2BACCF,IAAa,sCACbF,GAAWA,EAAQe,OAAS,EACzBf,EAAQgB,KAAI,SAAAC,GACR,IAAQC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OACI,gBAAkBC,MAAO,CAAEC,aAAc,QAAzC,UACI,4BACI,qCAAaH,MACb,uBAAIC,QAHFD,EAOjB,KAED,uEAKX,C,+LCjDKI,EAAW,gCACXC,EAAa,sNAINC,EAAa,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAC9DI,QAAS,CACLC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAJR,cACnBM,EADmB,yBAQlBA,EAASpB,MARS,2CAAH,qDAWbqB,EAAa,mCAAG,WAAOC,GAAP,uFACFN,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CS,GAAS,CACvEL,QAAS,CACLC,OAAQ,mBACJC,cAAc,UAAD,OAAYL,MAJZ,cACnBM,EADmB,yBAQlBA,EAASpB,MARS,2CAAH,sDAYbuB,EAAc,mCAAG,WAAO5B,GAAP,uFACHqB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BlB,GAAY,CAC7DsB,QAAS,CACLC,OAAQ,mBACJC,cAAc,UAAD,OAAYL,MAJX,cACpBM,EADoB,yBAQnBA,EAASpB,MARU,2CAAH,sDAWdwB,EAAc,mCAAG,WAAO7B,GAAP,uFACHqB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BlB,EAA9B,YAAkD,CACrEsB,QAAS,CACLC,OAAQ,mBACJC,cAAc,UAAD,OAAYL,MAJX,cACpBM,EADoB,yBAQnBA,EAASpB,MARU,2CAAH,sDAUdD,EAAc,mCAAG,WAAOJ,GAAP,uFACHqB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BlB,EAA9B,YAAkD,CACrEsB,QAAS,CACLC,OAAQ,mBACJC,cAAc,UAAD,OAAYL,MAJX,cACpBM,EADoB,yBAQnBA,EAASpB,MARU,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/api.js"],"sourcesContent":["import { requestReviews } from '../api'\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\nconst Reviews = () => {\n\n     const [reviews, setReviews] = useState(null); \n    const [isLoading, setIsLoading] = useState(false)\n    const { movie_id } = useParams()\n    \n\nuseEffect(() => {\n    const detailsCast = async () => {\n        try {\n            setIsLoading(true)\n            const data = await requestReviews(movie_id)\n            const dataReview = data.results;\n            setReviews(dataReview)\n            \n        } catch (error) {\n            console.log(error.message);\n            setIsLoading(false)\n        } finally {\n            setIsLoading(false)\n        }\n    }\n    detailsCast()\n}, [movie_id])\n\n    return (\n        <div>\n        {isLoading && <p>Loading...</p>}\n        {reviews && reviews.length > 0 ? (\n            reviews.map(review => {\n                const { author, content } = review;\n                return (\n                    <div key={author} style={{ marginBottom: '30px' }}>\n                        <div>\n                            <h3>Author: {author}</h3>\n                            <p>{content}</p>\n                        </div>\n                    </div>\n                );\n            })\n        ) : (\n            <h3>We don't have any reviews for this movie</h3>\n        )}\n    </div>\n);\n\n}\n\nexport default Reviews;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst ACCESS_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkOTZiN2ExNTYwNGYwMmExYWNkMTVhNWJlY2JmMjQ4MCIsInN1YiI6IjY0ODNhYTBhOTkyNTljMDBlMmY0NWE4ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._Sdbi-2PalUFAI7K7hzIv-hc4p92EU6q_yg6_IJJHjA';\n\n\n\nexport const requestMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n        headers: {\n            accept: 'application/json',\n            Authorization: `Bearer ${ACCESS_KEY}`\n        }\n    });\n    \n    return response.data;\n}\n\nexport const requestSearch = async (query) => {\n    const response = await axios.get(`${BASE_URL}search/movie?query=${query}`, {\n        headers: {\n            accept: 'application/json',\n                Authorization: `Bearer ${ACCESS_KEY}`\n        }\n    });\n\n    return response.data;\n}\n\n\nexport const requestDetails = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}`, {\n        headers: {\n            accept: 'application/json',\n                Authorization: `Bearer ${ACCESS_KEY}`\n        }\n    });\n\n    return response.data;\n}\n\nexport const requestCredits = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits`, {\n        headers: {\n            accept: 'application/json',\n                Authorization: `Bearer ${ACCESS_KEY}`\n        }\n    });\n\n    return response.data;\n}\nexport const requestReviews = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews`, {\n        headers: {\n            accept: 'application/json',\n                Authorization: `Bearer ${ACCESS_KEY}`\n        }\n    });\n\n    return response.data;\n}"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","movie_id","useParams","useEffect","detailsCast","requestReviews","data","dataReview","results","console","log","message","length","map","review","author","content","style","marginBottom","BASE_URL","ACCESS_KEY","requestMovies","axios","headers","accept","Authorization","response","requestSearch","query","requestDetails","requestCredits"],"sourceRoot":""}