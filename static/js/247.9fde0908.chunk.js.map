{"version":3,"file":"static/js/247.9fde0908.chunk.js","mappings":"kOAkDA,UA7Ca,WAET,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAqBR,OAlBJE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,sGAEZJ,GAAa,GAFD,UAGOK,EAAAA,EAAAA,IAAeJ,GAHtB,OAGNK,EAHM,OAINC,EAAWD,EAAKE,KACtBV,EAASS,GALG,gDAQZE,QAAQC,IAAI,KAAMC,SAClBX,GAAa,GATD,yBAWZA,GAAa,GAXD,4EAAH,qDAcjBI,GACH,GAAE,CAACH,KAGI,0BACI,gBAAIW,UAAWC,EAAAA,EAAAA,KAAf,UACKd,IAAa,uCAEbF,GAASA,EAAMiB,KAAI,SAAAN,GAChB,IAAQO,EAA+CP,EAA/CO,GAAIC,EAA2CR,EAA3CQ,cAAeC,EAA4BT,EAA5BS,aAAcC,EAAcV,EAAdU,UACnCC,EAAM,8CAA0CF,GAEtD,OAAO,gBAAaL,UAAWC,EAAAA,EAAAA,KAAxB,UACFI,GAAe,gBAAKG,IAAKD,EAAQE,IAAKL,EAAeM,MAAM,SAAU,gBAAKF,IAFhE,4EAE6EC,IAAKL,EAAeM,MAAM,SAClH,cAAGV,UAAWC,EAAAA,EAAAA,KAAd,SAAyBG,KACzB,eAAGJ,UAAWC,EAAAA,EAAAA,UAAd,WAA6B,yCAA7B,IAAsDK,OAH1CH,EAKxB,QAIX,C,+LC9CKQ,EAAW,gCACXC,EAAa,sNAINC,EAAa,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAC9DI,QAAS,CACLC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,MAJR,cACnBM,EADmB,yBAQlBA,EAASxB,MARS,2CAAH,qDAWbyB,EAAa,mCAAG,WAAOC,GAAP,uFACFN,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CS,GAAS,CACvEL,QAAS,CACLC,OAAQ,mBACJC,cAAc,UAAD,OAAYL,MAJZ,cACnBM,EADmB,yBAQlBA,EAASxB,MARS,2CAAH,sDAYb2B,EAAc,mCAAG,WAAOhC,GAAP,uFACHyB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BtB,GAAY,CAC7D0B,QAAS,CACLC,OAAQ,mBACJC,cAAc,UAAD,OAAYL,MAJX,cACpBM,EADoB,yBAQnBA,EAASxB,MARU,2CAAH,sDAWdD,EAAc,mCAAG,WAAOJ,GAAP,uFACHyB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BtB,EAA9B,YAAkD,CACrE0B,QAAS,CACLC,OAAQ,mBACJC,cAAc,UAAD,OAAYL,MAJX,cACpBM,EADoB,yBAQnBA,EAASxB,MARU,2CAAH,sDAUd4B,EAAc,mCAAG,WAAOjC,GAAP,uFACHyB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BtB,EAA9B,YAAkD,CACrE0B,QAAS,CACLC,OAAQ,mBACJC,cAAc,UAAD,OAAYL,MAJX,cACpBM,EADoB,yBAQnBA,EAASxB,MARU,2CAAH,qD,oBClD3B,KAAgB,MAAQ,qBAAqB,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,UAAY,yB","sources":["components/Cast/Cast.jsx","components/api.js","webpack://react-homework-template/./src/components/Movie/movie.module.css?42df"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport css from '../Movie/movie.module.css'\nimport { requestCredits } from '../api'\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n\n    const [casts, setCasts] = useState(null); \n    const [isLoading, setIsLoading] = useState(false)\n    const { movie_id } = useParams()\n    \n\nuseEffect(() => {\n    const detailsCast = async () => {\n        try {\n            setIsLoading(true)\n            const data = await requestCredits(movie_id)\n            const dataCast = data.cast;\n            setCasts(dataCast)\n            \n        } catch (error) {\n            console.log(error.message);\n            setIsLoading(false)\n        } finally {\n            setIsLoading(false)\n        }\n    }\n    detailsCast()\n}, [movie_id])\n\n    return (\n        <div>\n            <ul className={css.list}>\n                {isLoading && <h2>Loading...</h2>}\n        \n                {casts && casts.map(cast => {\n                    const { id, original_name, profile_path, character } = cast;\n                    const poster = `https://image.tmdb.org/t/p/original/${profile_path}`;\n                    const noFoto = 'https://cdn.pixabay.com/photo/2019/04/06/06/44/astronaut-4106766_1280.jpg'\n                    return <li key={id} className={css.card}>\n                        {profile_path ? <img src={poster} alt={original_name} width=\"120\"/> : <img src={noFoto} alt={original_name} width=\"120\"/>}\n                        <p className={css.name}>{original_name}</p>\n                        <p className={css.character}><span>Character:</span> {character}</p>\n                    </li>\n           })} \n            </ul>        \n        </div>\n    )\n}\n\nexport default Cast;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst ACCESS_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkOTZiN2ExNTYwNGYwMmExYWNkMTVhNWJlY2JmMjQ4MCIsInN1YiI6IjY0ODNhYTBhOTkyNTljMDBlMmY0NWE4ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._Sdbi-2PalUFAI7K7hzIv-hc4p92EU6q_yg6_IJJHjA';\n\n\n\nexport const requestMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n        headers: {\n            accept: 'application/json',\n            Authorization: `Bearer ${ACCESS_KEY}`\n        }\n    });\n    \n    return response.data;\n}\n\nexport const requestSearch = async (query) => {\n    const response = await axios.get(`${BASE_URL}search/movie?query=${query}`, {\n        headers: {\n            accept: 'application/json',\n                Authorization: `Bearer ${ACCESS_KEY}`\n        }\n    });\n\n    return response.data;\n}\n\n\nexport const requestDetails = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}`, {\n        headers: {\n            accept: 'application/json',\n                Authorization: `Bearer ${ACCESS_KEY}`\n        }\n    });\n\n    return response.data;\n}\n\nexport const requestCredits = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits`, {\n        headers: {\n            accept: 'application/json',\n                Authorization: `Bearer ${ACCESS_KEY}`\n        }\n    });\n\n    return response.data;\n}\nexport const requestReviews = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews`, {\n        headers: {\n            accept: 'application/json',\n                Authorization: `Bearer ${ACCESS_KEY}`\n        }\n    });\n\n    return response.data;\n}","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"movie_movie__ALA1z\",\"links\":\"movie_links__JHv1+\",\"list\":\"movie_list__wzmQP\",\"card\":\"movie_card__+UOM5\",\"name\":\"movie_name__7XM76\",\"character\":\"movie_character__DJ+Xz\"};"],"names":["useState","casts","setCasts","isLoading","setIsLoading","movie_id","useParams","useEffect","detailsCast","requestCredits","data","dataCast","cast","console","log","message","className","css","map","id","original_name","profile_path","character","poster","src","alt","width","BASE_URL","ACCESS_KEY","requestMovies","axios","headers","accept","Authorization","response","requestSearch","query","requestDetails","requestReviews"],"sourceRoot":""}